version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: vori
      POSTGRES_PASSWORD: voripassword
      POSTGRES_DB: vori_db
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "--auth-host=trust"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Kafka 관련 서비스
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER: kafka:9092
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # 백엔드 서비스 추가
  backend:
    build: .
    ports:
      - "3000:3000"
    environment:
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      DATABASE_URL: "postgresql://vori:voripassword@postgres:5432/vori_db"
      NODE_ENV: "development"
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - kafka
      - postgres
      - zookeeper

  whisper:
    build: 
      context: ./src/whisper
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      KAFKA_BROKERS: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_GROUP_ID: whisper_service
      WHISPER_MODEL: base.en
      LOG_LEVEL: INFO
    volumes:
      - ./src/whisper:/app
    depends_on:
      - kafka
      - zookeeper

  spark-master:
    build: 
      context: ./src/insights
      dockerfile: Dockerfile
    command: ["bash", "-c", "/start-spark.sh"]
    environment:
      - SPARK_MODE=master
      - DATABASE_URL=postgresql://vori:voripassword@postgres:5432/vori_db
    ports:
      - "8080:8080"  # Spark UI
      - "7077:7077"  # Spark 마스터
    volumes:
      - ./src/insights:/app
    depends_on:
      - kafka
      - postgres
    
  spark-worker:
    build: 
      context: ./src/insights
      dockerfile: Dockerfile
    command: ["bash", "-c", "/start-spark.sh"]
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8081:8081"  # Worker UI 포트 추가
    volumes:
      - ./src/insights:/app
    depends_on:
      - spark-master

volumes:
  postgres_data: 